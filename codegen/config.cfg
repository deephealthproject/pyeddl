+include <pybind11/stl.h>
+include <pybind11/numpy.h>
+include <utils_addons.hpp>
-include <bits/std_function.h>

-namespace std

+include_for_namespace eddl <eddl_addons.hpp>
+add_on_binder_for_namespace eddl eddl_addons

+include_for_class Tensor <tensor_addons.hpp>
+add_on_binder Tensor tensor_addons

+include_for_class Net <net_addons.hpp>
+add_on_binder Net net_addons

+include_for_class Layer <layer_addons.hpp>
+add_on_binder Layer layer_addons

+include_for_class Metric <metric_addons.hpp>
+add_on_binder Metric metric_addons

+include_for_class Loss <loss_addons.hpp>
+add_on_binder Loss loss_addons

+include_for_class Optimizer <optimizer_addons.hpp>
+add_on_binder Optimizer optimizer_addons

+include_for_class NetLoss <netloss_addons.hpp>
+add_on_binder NetLoss netloss_addons

# no implementation
-function Tensor::rand_bernoulli
-function Tensor::rand_multinomial
-function Tensor::mask_indices
-function Net::distribute_weights

# manual bindings in tensor_addons
-function Tensor::select
-function Tensor::set_select
-function Tensor::mult2D

-function Net::unroll

# bind optimizers manually so we can use return_value_policy::reference
-function eddl::adadelta
-function eddl::adagrad
-function eddl::adam
-function eddl::adamax
-function eddl::nadam
-function eddl::rmsprop
-function eddl::sgd

# bind layers manually so we can use return_value_policy::reference and add
# keep_alive policies
-function eddl::Add
-function eddl::ReLu
-function eddl::Softmax
-function eddl::Sigmoid
-function eddl::LReLu
-function eddl::Tanh
-function eddl::Abs
-function eddl::Diff
-function eddl::Div
-function eddl::Exp
-function eddl::Log
-function eddl::Log2
-function eddl::Log10
-function eddl::Mult
-function eddl::Pow
-function eddl::Sqrt
-function eddl::Sub
-function eddl::Sum
-function eddl::GlorotNormal
-function eddl::GlorotUniform
-function eddl::RandomNormal
-function eddl::RandomUniform
-function eddl::Constant
-function eddl::L2
-function eddl::L1
-function eddl::L1L2
-function eddl::HeUniform
-function eddl::HeNormal

# bind manually so we can use return_value_policy::reference
-function eddl::detach

+class Loss
+class Metric
+class Optimizer
+class Net
+class NetLoss
